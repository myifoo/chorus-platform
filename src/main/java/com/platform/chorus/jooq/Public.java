/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.jooq;


import com.platform.chorus.jooq.tables.Collector;
import com.platform.chorus.jooq.tables.Entity;
import com.platform.chorus.jooq.tables.Field;
import com.platform.chorus.jooq.tables.Model;
import com.platform.chorus.jooq.tables.Relation;
import com.platform.chorus.jooq.tables.Value;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -1077114032;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.collector</code>.
     */
    public final Collector COLLECTOR = com.platform.chorus.jooq.tables.Collector.COLLECTOR;

    /**
     * The table <code>public.entity</code>.
     */
    public final Entity ENTITY = com.platform.chorus.jooq.tables.Entity.ENTITY;

    /**
     * The table <code>public.field</code>.
     */
    public final Field FIELD = com.platform.chorus.jooq.tables.Field.FIELD;

    /**
     * The table <code>public.model</code>.
     */
    public final Model MODEL = com.platform.chorus.jooq.tables.Model.MODEL;

    /**
     * The table <code>public.relation</code>.
     */
    public final Relation RELATION = com.platform.chorus.jooq.tables.Relation.RELATION;

    /**
     * The table <code>public.value</code>.
     */
    public final Value VALUE = com.platform.chorus.jooq.tables.Value.VALUE;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Collector.COLLECTOR,
            Entity.ENTITY,
            Field.FIELD,
            Model.MODEL,
            Relation.RELATION,
            Value.VALUE);
    }
}
