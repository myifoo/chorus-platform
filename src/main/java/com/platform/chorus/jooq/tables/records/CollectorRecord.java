/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.jooq.tables.records;


import com.platform.chorus.jooq.tables.Collector;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectorRecord extends UpdatableRecordImpl<CollectorRecord> implements Record6<Integer, String, String, String[], String[], String> {

    private static final long serialVersionUID = 1467875196;

    /**
     * Setter for <code>public.collector.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.collector.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.collector.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.collector.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.collector.result</code>.
     */
    public void setResult(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.collector.result</code>.
     */
    public String getResult() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.collector.injects</code>.
     */
    public void setInjects(String... value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.collector.injects</code>.
     */
    public String[] getInjects() {
        return (String[]) get(3);
    }

    /**
     * Setter for <code>public.collector.args</code>.
     */
    public void setArgs(String... value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.collector.args</code>.
     */
    public String[] getArgs() {
        return (String[]) get(4);
    }

    /**
     * Setter for <code>public.collector.description</code>.
     */
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.collector.description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String[], String[], String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String[], String[], String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Collector.COLLECTOR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Collector.COLLECTOR.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Collector.COLLECTOR.RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field4() {
        return Collector.COLLECTOR.INJECTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field5() {
        return Collector.COLLECTOR.ARGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Collector.COLLECTOR.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component4() {
        return getInjects();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] component5() {
        return getArgs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value4() {
        return getInjects();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value5() {
        return getArgs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectorRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectorRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectorRecord value3(String value) {
        setResult(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectorRecord value4(String... value) {
        setInjects(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectorRecord value5(String... value) {
        setArgs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectorRecord value6(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectorRecord values(Integer value1, String value2, String value3, String[] value4, String[] value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CollectorRecord
     */
    public CollectorRecord() {
        super(Collector.COLLECTOR);
    }

    /**
     * Create a detached, initialised CollectorRecord
     */
    public CollectorRecord(Integer id, String name, String result, String[] injects, String[] args, String description) {
        super(Collector.COLLECTOR);

        set(0, id);
        set(1, name);
        set(2, result);
        set(3, injects);
        set(4, args);
        set(5, description);
    }
}
