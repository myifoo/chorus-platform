/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.jooq.tables.daos;


import com.platform.chorus.jooq.tables.Value;
import com.platform.chorus.jooq.tables.records.ValueRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ValueDao extends DAOImpl<ValueRecord, com.platform.chorus.jooq.tables.pojos.Value, Integer> {

    /**
     * Create a new ValueDao without any configuration
     */
    public ValueDao() {
        super(Value.VALUE, com.platform.chorus.jooq.tables.pojos.Value.class);
    }

    /**
     * Create a new ValueDao with an attached configuration
     */
    public ValueDao(Configuration configuration) {
        super(Value.VALUE, com.platform.chorus.jooq.tables.pojos.Value.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.platform.chorus.jooq.tables.pojos.Value object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.platform.chorus.jooq.tables.pojos.Value> fetchById(Integer... values) {
        return fetch(Value.VALUE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.platform.chorus.jooq.tables.pojos.Value fetchOneById(Integer value) {
        return fetchOne(Value.VALUE.ID, value);
    }

    /**
     * Fetch records that have <code>owner IN (values)</code>
     */
    public List<com.platform.chorus.jooq.tables.pojos.Value> fetchByOwner(Integer... values) {
        return fetch(Value.VALUE.OWNER, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.platform.chorus.jooq.tables.pojos.Value> fetchByName(String... values) {
        return fetch(Value.VALUE.NAME, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.platform.chorus.jooq.tables.pojos.Value> fetchByType(String... values) {
        return fetch(Value.VALUE.TYPE, values);
    }

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    public List<com.platform.chorus.jooq.tables.pojos.Value> fetchByValue(String... values) {
        return fetch(Value.VALUE.VALUE_, values);
    }
}
