/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.jooq.tables.records;


import com.platform.chorus.jooq.tables.Field;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FieldRecord extends UpdatableRecordImpl<FieldRecord> implements Record9<Integer, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1859894541;

    /**
     * Setter for <code>public.field.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.field.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.field.owner</code>.
     */
    public void setOwner(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.field.owner</code>.
     */
    public String getOwner() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.field.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.field.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.field.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.field.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.field.label</code>.
     */
    public void setLabel(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.field.label</code>.
     */
    public String getLabel() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.field.collector</code>.
     */
    public void setCollector(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.field.collector</code>.
     */
    public String getCollector() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.field.relation</code>.
     */
    public void setRelation(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.field.relation</code>.
     */
    public String getRelation() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.field.constraints</code>.
     */
    public void setConstraints(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.field.constraints</code>.
     */
    public String getConstraints() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.field.description</code>.
     */
    public void setDescription(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.field.description</code>.
     */
    public String getDescription() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field1() {
        return Field.FIELD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field2() {
        return Field.FIELD.OWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field3() {
        return Field.FIELD.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field4() {
        return Field.FIELD.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field5() {
        return Field.FIELD.LABEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field6() {
        return Field.FIELD.COLLECTOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field7() {
        return Field.FIELD.RELATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field8() {
        return Field.FIELD.CONSTRAINTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field9() {
        return Field.FIELD.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getLabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getCollector();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getRelation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getConstraints();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getLabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCollector();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getRelation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getConstraints();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value2(String value) {
        setOwner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value5(String value) {
        setLabel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value6(String value) {
        setCollector(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value7(String value) {
        setRelation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value8(String value) {
        setConstraints(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord value9(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FieldRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FieldRecord
     */
    public FieldRecord() {
        super(Field.FIELD);
    }

    /**
     * Create a detached, initialised FieldRecord
     */
    public FieldRecord(Integer id, String owner, String name, String type, String label, String collector, String relation, String constraints, String description) {
        super(Field.FIELD);

        set(0, id);
        set(1, owner);
        set(2, name);
        set(3, type);
        set(4, label);
        set(5, collector);
        set(6, relation);
        set(7, constraints);
        set(8, description);
    }
}
