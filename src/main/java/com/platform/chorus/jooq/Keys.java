/*
 * This file is generated by jOOQ.
*/
package com.platform.chorus.jooq;


import com.platform.chorus.jooq.tables.Collector;
import com.platform.chorus.jooq.tables.Entity;
import com.platform.chorus.jooq.tables.Field;
import com.platform.chorus.jooq.tables.Model;
import com.platform.chorus.jooq.tables.Relation;
import com.platform.chorus.jooq.tables.Value;
import com.platform.chorus.jooq.tables.records.CollectorRecord;
import com.platform.chorus.jooq.tables.records.EntityRecord;
import com.platform.chorus.jooq.tables.records.FieldRecord;
import com.platform.chorus.jooq.tables.records.ModelRecord;
import com.platform.chorus.jooq.tables.records.RelationRecord;
import com.platform.chorus.jooq.tables.records.ValueRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CollectorRecord, Integer> IDENTITY_COLLECTOR = Identities0.IDENTITY_COLLECTOR;
    public static final Identity<EntityRecord, Integer> IDENTITY_ENTITY = Identities0.IDENTITY_ENTITY;
    public static final Identity<FieldRecord, Integer> IDENTITY_FIELD = Identities0.IDENTITY_FIELD;
    public static final Identity<ModelRecord, Integer> IDENTITY_MODEL = Identities0.IDENTITY_MODEL;
    public static final Identity<RelationRecord, Integer> IDENTITY_RELATION = Identities0.IDENTITY_RELATION;
    public static final Identity<ValueRecord, Integer> IDENTITY_VALUE = Identities0.IDENTITY_VALUE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CollectorRecord> COLLECTOR_PKEY = UniqueKeys0.COLLECTOR_PKEY;
    public static final UniqueKey<CollectorRecord> CL_U_KEY = UniqueKeys0.CL_U_KEY;
    public static final UniqueKey<EntityRecord> ENTITY_PKEY = UniqueKeys0.ENTITY_PKEY;
    public static final UniqueKey<EntityRecord> IE_U_KEY = UniqueKeys0.IE_U_KEY;
    public static final UniqueKey<FieldRecord> FIELD_PKEY = UniqueKeys0.FIELD_PKEY;
    public static final UniqueKey<FieldRecord> FM_U_KEY = UniqueKeys0.FM_U_KEY;
    public static final UniqueKey<ModelRecord> MODEL_PKEY = UniqueKeys0.MODEL_PKEY;
    public static final UniqueKey<ModelRecord> CM_U_KEY = UniqueKeys0.CM_U_KEY;
    public static final UniqueKey<RelationRecord> RELATION_PKEY = UniqueKeys0.RELATION_PKEY;
    public static final UniqueKey<ValueRecord> VALUE_PKEY = UniqueKeys0.VALUE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CollectorRecord, Integer> IDENTITY_COLLECTOR = Internal.createIdentity(Collector.COLLECTOR, Collector.COLLECTOR.ID);
        public static Identity<EntityRecord, Integer> IDENTITY_ENTITY = Internal.createIdentity(Entity.ENTITY, Entity.ENTITY.ID);
        public static Identity<FieldRecord, Integer> IDENTITY_FIELD = Internal.createIdentity(Field.FIELD, Field.FIELD.ID);
        public static Identity<ModelRecord, Integer> IDENTITY_MODEL = Internal.createIdentity(Model.MODEL, Model.MODEL.ID);
        public static Identity<RelationRecord, Integer> IDENTITY_RELATION = Internal.createIdentity(Relation.RELATION, Relation.RELATION.ID);
        public static Identity<ValueRecord, Integer> IDENTITY_VALUE = Internal.createIdentity(Value.VALUE, Value.VALUE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CollectorRecord> COLLECTOR_PKEY = Internal.createUniqueKey(Collector.COLLECTOR, "collector_pkey", Collector.COLLECTOR.ID);
        public static final UniqueKey<CollectorRecord> CL_U_KEY = Internal.createUniqueKey(Collector.COLLECTOR, "cl_u_key", Collector.COLLECTOR.NAME);
        public static final UniqueKey<EntityRecord> ENTITY_PKEY = Internal.createUniqueKey(Entity.ENTITY, "entity_pkey", Entity.ENTITY.ID);
        public static final UniqueKey<EntityRecord> IE_U_KEY = Internal.createUniqueKey(Entity.ENTITY, "ie_u_key", Entity.ENTITY.TYPE, Entity.ENTITY.NAME);
        public static final UniqueKey<FieldRecord> FIELD_PKEY = Internal.createUniqueKey(Field.FIELD, "field_pkey", Field.FIELD.ID);
        public static final UniqueKey<FieldRecord> FM_U_KEY = Internal.createUniqueKey(Field.FIELD, "fm_u_key", Field.FIELD.OWNER, Field.FIELD.NAME);
        public static final UniqueKey<ModelRecord> MODEL_PKEY = Internal.createUniqueKey(Model.MODEL, "model_pkey", Model.MODEL.ID);
        public static final UniqueKey<ModelRecord> CM_U_KEY = Internal.createUniqueKey(Model.MODEL, "cm_u_key", Model.MODEL.DOMAIN, Model.MODEL.NAME);
        public static final UniqueKey<RelationRecord> RELATION_PKEY = Internal.createUniqueKey(Relation.RELATION, "relation_pkey", Relation.RELATION.ID);
        public static final UniqueKey<ValueRecord> VALUE_PKEY = Internal.createUniqueKey(Value.VALUE, "value_pkey", Value.VALUE.ID);
    }
}
